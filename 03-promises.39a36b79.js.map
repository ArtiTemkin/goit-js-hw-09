{"mappings":"qhBAGA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAgD3C,SAASI,EAAQC,GACfC,EAAAV,GAASW,OAAOC,QAAQ,uBAAqBH,EAAII,eAAmBJ,EAAEK,U,CAGxE,SAASC,EAAON,GACdC,EAAAV,GAASW,OAAOK,QAAQ,sBAAoBP,EAAEI,eAAmBJ,EAAEK,U,CAnDrEZ,EAAKe,iBAAiB,UAkBtB,SAAkBC,GAChBA,EAAMC,iBAjBR,SAAuBC,EAAGN,GACxB,IAAID,EAAWO,EAYf,OAVgB,IAAIC,SAAQ,CAACT,EAASI,KACpCM,YAAW,KACaC,KAAKC,SAAW,GAEpCZ,EAAQ,C,SAAEC,E,MAAUC,IAEpBE,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAE7BA,EAAM,G,CAOXW,CAAc,EAAGpB,EAAWqB,OACzBC,MAAK,EAACd,SAACA,EAAQC,MAAEA,MAChBN,EAAQ,C,SAAEK,E,MAAUC,GAAQ,IAE/Bc,OAAM,EAACf,SAAEA,EAAQC,MAAEA,MAClBC,EAAO,C,SAAEF,E,MAAUC,GAAQ,IAE5Be,SAAQ,KACA,IAAIC,EAAmB,EACnBC,EAAaC,OAAO3B,EAAWqB,OAC/BO,EAAgBD,OAAO1B,EAAUoB,OAASK,EAC1CG,EAAaC,aAAY,KACJZ,KAAKC,SAAW,GAEpChB,EAAQ,CAACK,SAAUiB,EAAmBhB,MAAMmB,IAE5ClB,EAAO,CAACF,SAASiB,EAAkBhB,MAAMmB,IAE3CA,GAAgCD,OAAO1B,EAAUoB,OAC7CI,KAAsBvB,EAAYmB,OACpCU,OAAOC,cAAcH,EAAW,GAEjCF,OAAO1B,EAAUoB,OAAO,G","sources":["src/js/03-promises1.js"],"sourcesContent":["// Достучаться до полей ввода\n// Повесить слушателся на Сабмит\n//\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form')\nconst delayInput = form.querySelector('input[name=\"delay\"]')\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]')\n\nform.addEventListener('submit', onSubmit)\n\nfunction createPromise(a, delay) {\n  let position = a\n\n  const promise = new Promise((success, failure) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        success({ position, delay })\n      } else {\n        failure({ position, delay })\n      }\n    }, delay)\n   });\n  return promise\n}\n\nfunction onSubmit(event) {\n  event.preventDefault()\n  createPromise(1, delayInput.value)\n    .then(({position, delay}) => {\n      resolve({ position, delay })\n  })\n  .catch(({ position, delay }) => {\n    reject({ position, delay })\n  })\n  .finally(() => {\n           let intervalPosition = 2;\n           let startDelay = Number(delayInput.value)\n           let intervalDelay = Number(stepInput.value) + startDelay\n           let intervalID = setInterval(() => {\n              const shouldResolve = Math.random() > 0.3;\n              if (shouldResolve) {\n                resolve({position: intervalPosition , delay:intervalDelay})\n              } else {\n                reject({position:intervalPosition, delay:intervalDelay })\n              }\n              intervalDelay = intervalDelay + Number(stepInput.value)\n              if (intervalPosition++ >= amountInput.value) {\n                window.clearInterval(intervalID)\n              }\n            }, Number(stepInput.value))\n        })\n}\n\nfunction resolve(timer) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${timer.position} in ${timer.delay}ms`);\n}\n\nfunction reject(timer) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${timer.position} in ${timer.delay}ms`);\n}\n"],"names":["$eWCmQ","parcelRequire","$eda9bef1f070d89a$var$form","document","querySelector","$eda9bef1f070d89a$var$delayInput","$eda9bef1f070d89a$var$stepInput","$eda9bef1f070d89a$var$amountInput","$eda9bef1f070d89a$var$resolve","timer","$parcel$interopDefault","Notify","success","position","delay","$eda9bef1f070d89a$var$reject","failure","addEventListener","event","preventDefault","a","Promise","setTimeout","Math","random","$eda9bef1f070d89a$var$createPromise","value","then","catch","finally","intervalPosition","startDelay","Number","intervalDelay","intervalID","setInterval","window","clearInterval"],"version":3,"file":"03-promises.39a36b79.js.map"}