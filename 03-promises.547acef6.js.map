{"mappings":"iiBAGA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAgD3C,SAASI,EAAQC,GACfC,EAAAV,GAASW,OAAOC,QAAQ,uBAA8CC,OAArBJ,EAAMK,SAAS,QAAkBD,OAAZJ,EAAMM,MAAM,M,CAGpF,SAASC,EAAOP,GACdC,EAAAV,GAASW,OAAOM,QAAQ,sBAA2CJ,OAArBJ,EAAMK,SAAS,QAAkBD,OAAZJ,EAAMM,MAAM,M,CAnDjFb,EAAKgB,iBAAiB,UAkBtB,SAAkBC,GAChBA,EAAMC,kBAjBeC,EAkBP,EAlBUN,EAkBPV,EAAWiB,MAjBxBR,EAAWO,EAEC,IAAIE,SAAQ,SAACX,EAASK,GACpCO,YAAW,WACaC,KAAKC,SAAW,GAEpCd,EAAQ,CAAEE,WAAUC,UAEpBE,EAAQ,CAAEH,WAAUC,S,GAErBA,E,KAQFY,MAAK,SAAAC,GACJpB,EAAQ,CAAEM,SADIc,EAARd,SACcC,MADCa,EAALb,O,IAGnBc,OAAM,SAAAD,GACLZ,EAAO,CAAEF,SADOc,EAARd,SACWC,MADIa,EAALb,O,IAGnBe,SAAQ,WACA,IAAIC,EAAmB,EACnBC,EAAaC,OAAO5B,EAAWiB,OAC/BY,EAAgBD,OAAO3B,EAAUgB,OAASU,EAC1CG,EAAaC,aAAY,WACJX,KAAKC,SAAW,GAEpClB,EAAQ,CAACM,SAAUiB,EAAmBhB,MAAMmB,IAE5ClB,EAAO,CAACF,SAASiB,EAAkBhB,MAAMmB,IAE3CA,GAAgCD,OAAO3B,EAAUgB,OAC7CS,KAAsBxB,EAAYe,OACpCe,OAAOC,cAAcH,E,GAEtBF,OAAO3B,EAAUgB,O,IAxChC,IAAuBD,EAAGN,EACpBD,C","sources":["src/js/03-promises1.js"],"sourcesContent":["// Достучаться до полей ввода\n// Повесить слушателся на Сабмит\n//\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form')\nconst delayInput = form.querySelector('input[name=\"delay\"]')\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]')\n\nform.addEventListener('submit', onSubmit)\n\nfunction createPromise(a, delay) {\n  let position = a\n\n  const promise = new Promise((success, failure) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        success({ position, delay })\n      } else {\n        failure({ position, delay })\n      }\n    }, delay)\n   });\n  return promise\n}\n\nfunction onSubmit(event) {\n  event.preventDefault()\n  createPromise(1, delayInput.value)\n    .then(({position, delay}) => {\n      resolve({ position, delay })\n  })\n  .catch(({ position, delay }) => {\n    reject({ position, delay })\n  })\n  .finally(() => {\n           let intervalPosition = 2;\n           let startDelay = Number(delayInput.value)\n           let intervalDelay = Number(stepInput.value) + startDelay\n           let intervalID = setInterval(() => {\n              const shouldResolve = Math.random() > 0.3;\n              if (shouldResolve) {\n                resolve({position: intervalPosition , delay:intervalDelay})\n              } else {\n                reject({position:intervalPosition, delay:intervalDelay })\n              }\n              intervalDelay = intervalDelay + Number(stepInput.value)\n              if (intervalPosition++ >= amountInput.value) {\n                window.clearInterval(intervalID)\n              }\n            }, Number(stepInput.value))\n        })\n}\n\nfunction resolve(timer) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${timer.position} in ${timer.delay}ms`);\n}\n\nfunction reject(timer) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${timer.position} in ${timer.delay}ms`);\n}\n"],"names":["$iU1Pc","parcelRequire","$75f25382af0f113c$var$form","document","querySelector","$75f25382af0f113c$var$delayInput","$75f25382af0f113c$var$stepInput","$75f25382af0f113c$var$amountInput","$75f25382af0f113c$var$resolve","timer","$parcel$interopDefault","Notify","success","concat","position","delay","$75f25382af0f113c$var$reject","failure","addEventListener","event","preventDefault","a","value","Promise","setTimeout","Math","random","then","param","catch","finally","intervalPosition","startDelay","Number","intervalDelay","intervalID","setInterval","window","clearInterval"],"version":3,"file":"03-promises.547acef6.js.map"}